// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  firstname String
  lastname String
  email String @unique
  password String
  role Role @default(USER)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Product {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  code String @unique
  name String
  images String[]
  cost Int
  price Int
  quantity Int
  alertQuantity Int @map("alert_quantity")
  details String?
  isActive Boolean @default(true)
  // Foreign keys
  productTypeId String @db.Uuid @map("type")
  unitOfMeasureId String @db.Uuid @map("unit_of_measure")
  productBrandId String @db.Uuid @map("brand")
  productCategoryId String @db.Uuid @map("category")
  barcodeSymbologyId String @db.Uuid @map("barcode_symbology")
  // Reference fields to be used by client
  productType ProductType @relation(fields: [productTypeId], references: [id])
  unitOfMeasure UnitOfMeasure @relation(fields: [unitOfMeasureId], references: [id])
  productBrand ProductBrand @relation(fields: [productBrandId], references: [id])
  productCategory ProductCategory @relation(fields: [productCategoryId], references: [id])
  barcodeSymbology BarcodeSymbology @relation(fields: [barcodeSymbologyId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  @@map("product")
}

model ProductBrand {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name String @unique
  isActive Boolean @default(true)
  // Prisma relation fields. Don't get created in db. See https://www.prisma.io/docs/concepts/components/prisma-schema/relations
  products Product[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  @@map("product_brand")
}

model ProductCategory {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name String @unique
  isActive Boolean @default(true)
  // Prisma relation fields. Don't get created in db. See https://www.prisma.io/docs/concepts/components/prisma-schema/relations
  products Product[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  @@map("product_category")
}

model ProductType {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name String @unique
  isActive Boolean @default(true)
  // Prisma relation fields. Don't get created in db. See https://www.prisma.io/docs/concepts/components/prisma-schema/relations
  products Product[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")  
  @@map("product_type")
}

model BarcodeSymbology {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name String @unique // [Code25, Code39, Code128, EAN8, EAN13, UPC-A, UPC-E]
  isActive Boolean @default(true)
  // Prisma relation fields. Don't get created in db. See https://www.prisma.io/docs/concepts/components/prisma-schema/relations
  products Product[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  @@map("barcode_symbology")
}

model UnitOfMeasure {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name String @unique
  isActive Boolean @default(true)
  // Prisma relation fields. Don't get created in db. See https://www.prisma.io/docs/concepts/components/prisma-schema/relations
  products Product[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  @@map("product_unit")
}